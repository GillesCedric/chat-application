version: '3.8'
services:
  api-gateway:
    build:
      context: .
      dockerfile: src/services/api-gateway/Dockerfile
    ports:
      - "8080:3000"
    image: gillescedric/api-gateway:latest
    networks:
      - chat-application-network
    restart: always
    env_file:
      - .env
    volumes:
      - /etc/chat-application/certs/api-gateway:/app/certs/api-gateway
      - /etc/chat-application/logs/api-gateway:/app/logs
    depends_on:
      - mongodb

  user:
    build:
      context: .
      dockerfile: src/services/user/Dockerfile
    ports:
      - "3000"
    image: gillescedric/user:latest
    networks:
      - chat-application-network
    restart: always
    env_file:
      - .env
    volumes:
      - /etc/chat-application/certs/user:/app/certs/user
      - /etc/chat-application/certs/ca:/app/certs/ca
      - /etc/chat-application/logs/user:/app/logs
    depends_on:
      - mongodb

  mongodb:
    image: mongo:latest
    user: "999:999"
    restart: always
    volumes:
      - mongodb_data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    networks:
      - chat-application-network

  mongodb-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_SERVER: mongodb
    networks:
      - chat-application-network
    depends_on:
      - mongodb

networks:
  chat-application-network:

volumes:
  mongodb_data:


