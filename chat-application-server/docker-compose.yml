version: '3.8'
services:
  api-gateway:
    build:
      context: .
      dockerfile: src/services/api-gateway/Dockerfile
    ports:
      - "443:3000"
    image: gillescedric/api-gateway:latest
    networks:
      - chat-application-network
    restart: always
    env_file:
      - .env
    volumes:
      - /etc/chat-application/certs/api-gateway:/app/certs/api-gateway:ro
      - /etc/chat-application/certs/ca:/app/certs/ca:ro
      - api-gateway-logs:/app/logs
    depends_on:
      - mongodb

  user:
    build:
      context: .
      dockerfile: src/services/user/Dockerfile
    ports:
      - "3000"
    image: gillescedric/user:latest
    networks:
      - chat-application-network
    restart: always
    env_file:
      - .env
    volumes:
      - /etc/chat-application/certs/user:/app/certs/user:ro
      - /etc/chat-application/certs/ca:/app/certs/ca:ro
      - user-logs:/app/logs
    depends_on:
      - mongodb

  chat:
    build:
      context: .
      dockerfile: src/services/chat/Dockerfile
    ports:
      - "3000"
    image: gillescedric/chat:latest
    networks:
      - chat-application-network
    restart: always
    env_file:
      - .env
    volumes:
      - /etc/chat-application/certs/chat:/app/certs/chat:ro
      - /etc/chat-application/certs/ca:/app/certs/ca:ro
      - chat-logs:/app/logs
    depends_on:
      - mongodb

  notification:
    build:
      context: .
      dockerfile: src/services/notification/Dockerfile
    ports:
      - "3000"
    image: gillescedric/notification:latest
    networks:
      - chat-application-network
    restart: always
    env_file:
      - .env
    volumes:
      - /etc/chat-application/certs/notification:/app/certs/notification:ro
      - /etc/chat-application/certs/ca:/app/certs/ca:ro
      - notification-logs:/app/logs
    depends_on:
      - mongodb

  socket:
    build:
      context: .
      dockerfile: src/services/socket/Dockerfile
    ports:
      - "3000"
    image: gillescedric/socket:latest
    networks:
      - chat-application-network
    restart: always
    env_file:
      - .env
    volumes:
      - /etc/chat-application/certs/socket:/app/certs/socket:ro
      - /etc/chat-application/certs/ca:/app/certs/ca:ro
      - socket-logs:/app/logs
    depends_on:
      - mongodb

  mongodb:
    image: mongo:latest
    restart: always
    volumes:
      - mongodb_data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    networks:
      - chat-application-network

  mongodb-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_BASICAUTH: "false"
    networks:
      - chat-application-network
    depends_on:
      - mongodb

networks:
  chat-application-network:


volumes:
  mongodb_data:
  api-gateway-logs:
  user-logs:
  chat-logs:
  notification-logs:
  socket-logs:


